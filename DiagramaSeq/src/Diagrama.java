//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-05 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Diagrama implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=segmentos KEEP=NO
  public volatile Vector segmentos = null;
// ***** VDMTOOLS END Name=segmentos

// ***** VDMTOOLS START Name=objetos KEEP=NO
  public volatile Vector objetos = null;
// ***** VDMTOOLS END Name=objetos

// ***** VDMTOOLS START Name=titulo KEEP=NO
  public volatile String titulo = null;
// ***** VDMTOOLS END Name=titulo

// ***** VDMTOOLS START Name=limite KEEP=NO
  public volatile Integer limite = null;
// ***** VDMTOOLS END Name=limite

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=DiagramaSentinel KEEP=NO
  class DiagramaSentinel extends Sentinel {

    public final int Diagrama = 0;

    public final int getObjeto = 1;

    public final int getSegmento = 2;

    public final int editarObjeto = 3;

    public final int getIdsObjetos = 4;

    public final int editarSegmento = 5;

    public final int eliminarObjeto = 6;

    public final int eliminarSegmento = 7;

    public final int calcularSequencias = 8;

    public final int inserirObjeto_u_u1_un_uObjeto = 9;

    public final int inserirObjeto_u_u2_un_uObjeto_uM = 10;

    public final int inserirSegmento_u_u1_un_uSegmento = 11;

    public final int inserirSegmento_u_u2_un_uSegmento_uM = 12;

    public final int nr_functions = 13;


    public DiagramaSentinel () throws CGException {}


    public DiagramaSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=DiagramaSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new DiagramaSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Diagrama KEEP=NO
  private void vdm_init_Diagrama () throws CGException {
    try {

      setSentinel();
      segmentos = new Vector();
      objetos = new Vector();
      titulo = UTIL.ConvertToString(new String());
      limite = new Integer(5);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Diagrama


// ***** VDMTOOLS START Name=Diagrama KEEP=NO
  public Diagrama () throws CGException {
    vdm_init_Diagrama();
  }
// ***** VDMTOOLS END Name=Diagrama


// ***** VDMTOOLS START Name=Diagrama#2|String|Integer KEEP=NO
  public Diagrama (final String t, final Integer l) throws CGException {

    if (!this.pre_Diagrama(t, l).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in Diagrama");
    vdm_init_Diagrama();
    {

      titulo = UTIL.ConvertToString(UTIL.clone(t));
      limite = UTIL.NumberToInt(UTIL.clone(l));
    }
  }
// ***** VDMTOOLS END Name=Diagrama#2|String|Integer


// ***** VDMTOOLS START Name=pre_Diagrama#2|String|Integer KEEP=NO
  public Boolean pre_Diagrama (final String t, final Integer l) throws CGException {

    Boolean varRes_3 = null;
    {
      if ((varRes_3 = new Boolean((l.intValue()) > (new Integer(0).intValue()))).booleanValue()) 
        varRes_3 = new Boolean(!UTIL.equals(t, new String("")));
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_Diagrama#2|String|Integer


// ***** VDMTOOLS START Name=getObjeto#1|Integer KEEP=NO
  public Objeto getObjeto (final Integer ord) throws CGException {

    if (!this.pre_getObjeto(ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in getObjeto");
    sentinel.entering(((DiagramaSentinel) sentinel).getObjeto);
    try {

      Objeto o = null;
      Objeto rhs_2 = null;
      if ((1 <= ord.intValue()) && (ord.intValue() <= objetos.size())) 
        rhs_2 = (Objeto) objetos.get(ord.intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      o = (Objeto) UTIL.clone(rhs_2);
      return (Objeto) o;
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).getObjeto);
    }
  }
// ***** VDMTOOLS END Name=getObjeto#1|Integer


// ***** VDMTOOLS START Name=pre_getObjeto#1|Integer KEEP=NO
  public Boolean pre_getObjeto (final Integer ord) throws CGException {

    Boolean varRes_2 = null;
    HashSet var2_4 = new HashSet();
    HashSet riseq_6 = new HashSet();
    int max_7 = objetos.size();
    for (int i_8 = 1; i_8 <= max_7; i_8++) 
      riseq_6.add(new Integer(i_8));
    var2_4 = riseq_6;
    varRes_2 = new Boolean(var2_4.contains(ord));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_getObjeto#1|Integer


// ***** VDMTOOLS START Name=getIdsObjetos KEEP=NO
  public HashSet getIdsObjetos () throws CGException {

    sentinel.entering(((DiagramaSentinel) sentinel).getIdsObjetos);
    try {

      HashSet s = new HashSet();
      {

        HashSet iset_1 = new HashSet();
        HashSet set_9 = new HashSet();
        Enumeration enm_10 = objetos.elements();
        while ( enm_10.hasMoreElements())
          set_9.add(enm_10.nextElement());
        iset_1 = set_9;
        Objeto o = null;
        for (Iterator enm_14 = iset_1.iterator(); enm_14.hasNext(); ) {

          Objeto elem_2 = (Objeto) enm_14.next();
          o = (Objeto) elem_2;
          {

            Integer elem_12 = null;
            elem_12 = o.id;
            s.add(elem_12);
          }
        }
      }
      return s;
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).getIdsObjetos);
    }
  }
// ***** VDMTOOLS END Name=getIdsObjetos


// ***** VDMTOOLS START Name=getSegmento#1|Integer KEEP=NO
  public Segmento getSegmento (final Integer ord) throws CGException {

    if (!this.pre_getSegmento(ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in getSegmento");
    sentinel.entering(((DiagramaSentinel) sentinel).getSegmento);
    try {

      Segmento s = null;
      Segmento rhs_2 = null;
      if ((1 <= ord.intValue()) && (ord.intValue() <= segmentos.size())) 
        rhs_2 = (Segmento) segmentos.get(ord.intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      s = (Segmento) UTIL.clone(rhs_2);
      return (Segmento) s;
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).getSegmento);
    }
  }
// ***** VDMTOOLS END Name=getSegmento#1|Integer


// ***** VDMTOOLS START Name=pre_getSegmento#1|Integer KEEP=NO
  public Boolean pre_getSegmento (final Integer ord) throws CGException {

    Boolean varRes_2 = null;
    HashSet var2_4 = new HashSet();
    HashSet riseq_6 = new HashSet();
    int max_7 = segmentos.size();
    for (int i_8 = 1; i_8 <= max_7; i_8++) 
      riseq_6.add(new Integer(i_8));
    var2_4 = riseq_6;
    varRes_2 = new Boolean(var2_4.contains(ord));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_getSegmento#1|Integer


// ***** VDMTOOLS START Name=inserirSegmento#1|Segmento KEEP=NO
  public void inserirSegmento (final Segmento sgmt) throws CGException {

    if (!this.pre_inserirSegmento(sgmt).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in inserirSegmento");
    sentinel.entering(((DiagramaSentinel) sentinel).inserirSegmento_u_u1_un_uSegmento);
    try {
      segmentos.add(sgmt);
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).inserirSegmento_u_u1_un_uSegmento);
    }
  }
// ***** VDMTOOLS END Name=inserirSegmento#1|Segmento


// ***** VDMTOOLS START Name=pre_inserirSegmento#1|Segmento KEEP=NO
  public Boolean pre_inserirSegmento (final Segmento sgmt) throws CGException {

    Boolean varRes_2 = null;
    Boolean var1_3 = null;
    HashSet var1_4 = new HashSet();
    var1_4 = sgmt.ids;
    var1_3 = new Boolean(getIdsObjetos().containsAll(var1_4));
    {
      if ((varRes_2 = var1_3).booleanValue()) {

        Boolean var2_7 = null;
        Boolean unArg_8 = null;
        boolean tmpQuant_9 = false;
        {

          HashSet e1_set_17 = new HashSet(segmentos);
          Segmento s = null;
          {
            for (Iterator enm_19 = e1_set_17.iterator(); enm_19.hasNext() && !tmpQuant_9; ) {

              Segmento elem_18 = (Segmento) enm_19.next();
              s = (Segmento) elem_18;
              Boolean pred_10 = null;
              Integer var1_11 = null;
              var1_11 = s.id;
              Integer var2_13 = null;
              var2_13 = sgmt.id;
              pred_10 = new Boolean(var1_11.intValue() == var2_13.intValue());
              if (pred_10.booleanValue()) 
                tmpQuant_9 = true;
            }
          }
        }
        unArg_8 = new Boolean(tmpQuant_9);
        var2_7 = new Boolean(!unArg_8.booleanValue());
        varRes_2 = var2_7;
      }
    }
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_inserirSegmento#1|Segmento


// ***** VDMTOOLS START Name=inserirSegmento#2|Segmento|Integer KEEP=NO
  public void inserirSegmento (final Segmento sgmt, final Integer ord) throws CGException {

    if (!this.pre_inserirSegmento(sgmt, ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in inserirSegmento");
    sentinel.entering(((DiagramaSentinel) sentinel).inserirSegmento_u_u2_un_uSegmento_uM);
    try {
      if (new Boolean(ord.intValue() == new Integer(1).intValue()).booleanValue()) {

        Vector rhs_35 = null;
        Vector var1_36 = null;
        var1_36 = new Vector();
        var1_36.add(sgmt);
        rhs_35 = (Vector) var1_36.clone();
        rhs_35.addAll(segmentos);
        segmentos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_35));
      }
      else {

        Vector rhs_6 = null;
        Vector var1_7 = null;
        Vector var1_8 = null;
        int from_12 = (int) Math.max(new Integer(1).doubleValue() - 1, 0);
        int to_13 = (int) Math.min(new Integer(ord.intValue() - new Integer(1).intValue()).doubleValue(), segmentos.size());
        if (from_12 > to_13) 
          var1_8 = new Vector();
        else 
          var1_8 = new Vector(segmentos.subList(from_12, to_13));
        Vector var2_21 = null;
        var2_21 = new Vector();
        var2_21.add(sgmt);
        var1_7 = (Vector) var1_8.clone();
        var1_7.addAll(var2_21);
        Vector var2_23 = null;
        int from_27 = (int) Math.max(ord.doubleValue() - 1, 0);
        int to_28 = (int) Math.min(new Integer(segmentos.size()).doubleValue(), segmentos.size());
        if (from_27 > to_28) 
          var2_23 = new Vector();
        else 
          var2_23 = new Vector(segmentos.subList(from_27, to_28));
        rhs_6 = (Vector) var1_7.clone();
        rhs_6.addAll(var2_23);
        segmentos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_6));
      }
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).inserirSegmento_u_u2_un_uSegmento_uM);
    }
  }
// ***** VDMTOOLS END Name=inserirSegmento#2|Segmento|Integer


// ***** VDMTOOLS START Name=pre_inserirSegmento#2|Segmento|Integer KEEP=NO
  public Boolean pre_inserirSegmento (final Segmento sgmt, final Integer ord) throws CGException {

    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Boolean var1_5 = null;
    HashSet var2_7 = new HashSet();
    HashSet riseq_9 = new HashSet();
    int max_10 = segmentos.size();
    for (int i_11 = 1; i_11 <= max_10; i_11++) 
      riseq_9.add(new Integer(i_11));
    var2_7 = riseq_9;
    var1_5 = new Boolean(var2_7.contains(ord));
    {
      if ((var1_4 = var1_5).booleanValue()) {

        Boolean var2_12 = null;
        HashSet var1_13 = new HashSet();
        var1_13 = sgmt.ids;
        var2_12 = new Boolean(getIdsObjetos().containsAll(var1_13));
        var1_4 = var2_12;
      }
    }
    {
      if ((varRes_3 = var1_4).booleanValue()) {

        Boolean var2_16 = null;
        Boolean unArg_17 = null;
        boolean tmpQuant_18 = false;
        {

          HashSet e1_set_26 = new HashSet(segmentos);
          Segmento s = null;
          {
            for (Iterator enm_28 = e1_set_26.iterator(); enm_28.hasNext() && !tmpQuant_18; ) {

              Segmento elem_27 = (Segmento) enm_28.next();
              s = (Segmento) elem_27;
              Boolean pred_19 = null;
              Integer var1_20 = null;
              var1_20 = s.id;
              Integer var2_22 = null;
              var2_22 = sgmt.id;
              pred_19 = new Boolean(var1_20.intValue() == var2_22.intValue());
              if (pred_19.booleanValue()) 
                tmpQuant_18 = true;
            }
          }
        }
        unArg_17 = new Boolean(tmpQuant_18);
        var2_16 = new Boolean(!unArg_17.booleanValue());
        varRes_3 = var2_16;
      }
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_inserirSegmento#2|Segmento|Integer


// ***** VDMTOOLS START Name=editarSegmento#2|Integer|String KEEP=NO
  public void editarSegmento (final Integer ord, final String novoNome) throws CGException {

    if (!this.pre_editarSegmento(ord, novoNome).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in editarSegmento");
    sentinel.entering(((DiagramaSentinel) sentinel).editarSegmento);
    try {

      Segmento level_4 = null;
      if ((1 <= ord.intValue()) && (ord.intValue() <= segmentos.size())) 
        level_4 = (Segmento) segmentos.get(ord.intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      level_4.nome = UTIL.ConvertToString(novoNome);
      segmentos.set(((Integer) ord).intValue() - 1, level_4);
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).editarSegmento);
    }
  }
// ***** VDMTOOLS END Name=editarSegmento#2|Integer|String


// ***** VDMTOOLS START Name=pre_editarSegmento#2|Integer|String KEEP=NO
  public Boolean pre_editarSegmento (final Integer ord, final String novoNome) throws CGException {

    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    HashSet var2_6 = new HashSet();
    HashSet riseq_8 = new HashSet();
    int max_9 = segmentos.size();
    for (int i_10 = 1; i_10 <= max_9; i_10++) 
      riseq_8.add(new Integer(i_10));
    var2_6 = riseq_8;
    var1_4 = new Boolean(var2_6.contains(ord));
    {
      if ((varRes_3 = var1_4).booleanValue()) 
        varRes_3 = new Boolean(!UTIL.equals(novoNome, new String("")));
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_editarSegmento#2|Integer|String


// ***** VDMTOOLS START Name=inserirObjeto#1|Objeto KEEP=NO
  public void inserirObjeto (final Objeto obj) throws CGException {

    if (!this.pre_inserirObjeto(obj).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in inserirObjeto");
    sentinel.entering(((DiagramaSentinel) sentinel).inserirObjeto_u_u1_un_uObjeto);
    try {
      objetos.add(obj);
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).inserirObjeto_u_u1_un_uObjeto);
    }
  }
// ***** VDMTOOLS END Name=inserirObjeto#1|Objeto


// ***** VDMTOOLS START Name=pre_inserirObjeto#1|Objeto KEEP=NO
  public Boolean pre_inserirObjeto (final Objeto obj) throws CGException {

    Boolean varRes_2 = null;
    Boolean unArg_3 = null;
    boolean tmpQuant_4 = false;
    {

      HashSet e1_set_12 = new HashSet(objetos);
      Objeto s = null;
      {
        for (Iterator enm_14 = e1_set_12.iterator(); enm_14.hasNext() && !tmpQuant_4; ) {

          Objeto elem_13 = (Objeto) enm_14.next();
          s = (Objeto) elem_13;
          Boolean pred_5 = null;
          Integer var1_6 = null;
          var1_6 = s.id;
          Integer var2_8 = null;
          var2_8 = obj.id;
          pred_5 = new Boolean(var1_6.intValue() == var2_8.intValue());
          if (pred_5.booleanValue()) 
            tmpQuant_4 = true;
        }
      }
    }
    unArg_3 = new Boolean(tmpQuant_4);
    varRes_2 = new Boolean(!unArg_3.booleanValue());
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_inserirObjeto#1|Objeto


// ***** VDMTOOLS START Name=inserirObjeto#2|Objeto|Integer KEEP=NO
  public void inserirObjeto (final Objeto obj, final Integer ord) throws CGException {

    if (!this.pre_inserirObjeto(obj, ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in inserirObjeto");
    sentinel.entering(((DiagramaSentinel) sentinel).inserirObjeto_u_u2_un_uObjeto_uM);
    try {
      if (new Boolean(ord.intValue() == new Integer(1).intValue()).booleanValue()) {

        Vector rhs_35 = null;
        Vector var1_36 = null;
        var1_36 = new Vector();
        var1_36.add(obj);
        rhs_35 = (Vector) var1_36.clone();
        rhs_35.addAll(objetos);
        objetos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_35));
      }
      else {

        Vector rhs_6 = null;
        Vector var1_7 = null;
        Vector var1_8 = null;
        int from_12 = (int) Math.max(new Integer(1).doubleValue() - 1, 0);
        int to_13 = (int) Math.min(new Integer(ord.intValue() - new Integer(1).intValue()).doubleValue(), objetos.size());
        if (from_12 > to_13) 
          var1_8 = new Vector();
        else 
          var1_8 = new Vector(objetos.subList(from_12, to_13));
        Vector var2_21 = null;
        var2_21 = new Vector();
        var2_21.add(obj);
        var1_7 = (Vector) var1_8.clone();
        var1_7.addAll(var2_21);
        Vector var2_23 = null;
        int from_27 = (int) Math.max(ord.doubleValue() - 1, 0);
        int to_28 = (int) Math.min(new Integer(objetos.size()).doubleValue(), objetos.size());
        if (from_27 > to_28) 
          var2_23 = new Vector();
        else 
          var2_23 = new Vector(objetos.subList(from_27, to_28));
        rhs_6 = (Vector) var1_7.clone();
        rhs_6.addAll(var2_23);
        objetos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_6));
      }
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).inserirObjeto_u_u2_un_uObjeto_uM);
    }
  }
// ***** VDMTOOLS END Name=inserirObjeto#2|Objeto|Integer


// ***** VDMTOOLS START Name=pre_inserirObjeto#2|Objeto|Integer KEEP=NO
  public Boolean pre_inserirObjeto (final Objeto obj, final Integer ord) throws CGException {

    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    HashSet var2_6 = new HashSet();
    HashSet riseq_8 = new HashSet();
    int max_9 = objetos.size();
    for (int i_10 = 1; i_10 <= max_9; i_10++) 
      riseq_8.add(new Integer(i_10));
    var2_6 = riseq_8;
    var1_4 = new Boolean(var2_6.contains(ord));
    {
      if ((varRes_3 = var1_4).booleanValue()) {

        Boolean var2_11 = null;
        Boolean unArg_12 = null;
        boolean tmpQuant_13 = false;
        {

          HashSet e1_set_21 = new HashSet(objetos);
          Objeto s = null;
          {
            for (Iterator enm_23 = e1_set_21.iterator(); enm_23.hasNext() && !tmpQuant_13; ) {

              Objeto elem_22 = (Objeto) enm_23.next();
              s = (Objeto) elem_22;
              Boolean pred_14 = null;
              Integer var1_15 = null;
              var1_15 = s.id;
              Integer var2_17 = null;
              var2_17 = obj.id;
              pred_14 = new Boolean(var1_15.intValue() == var2_17.intValue());
              if (pred_14.booleanValue()) 
                tmpQuant_13 = true;
            }
          }
        }
        unArg_12 = new Boolean(tmpQuant_13);
        var2_11 = new Boolean(!unArg_12.booleanValue());
        varRes_3 = var2_11;
      }
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_inserirObjeto#2|Objeto|Integer


// ***** VDMTOOLS START Name=editarObjeto#3|String|String|Integer KEEP=NO
  public void editarObjeto (final String novoNome, final String novoTipo, final Integer ord) throws CGException {

    if (!this.pre_editarObjeto(novoNome, novoTipo, ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in editarObjeto");
    sentinel.entering(((DiagramaSentinel) sentinel).editarObjeto);
    try {

      Objeto level_5 = null;
      if ((1 <= ord.intValue()) && (ord.intValue() <= objetos.size())) 
        level_5 = (Objeto) objetos.get(ord.intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      level_5.nome = UTIL.ConvertToString(novoNome);
      objetos.set(((Integer) ord).intValue() - 1, level_5);
      Objeto level_11 = null;
      if ((1 <= ord.intValue()) && (ord.intValue() <= objetos.size())) 
        level_11 = (Objeto) objetos.get(ord.intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      level_11.tipo = UTIL.ConvertToString(novoTipo);
      objetos.set(((Integer) ord).intValue() - 1, level_11);
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).editarObjeto);
    }
  }
// ***** VDMTOOLS END Name=editarObjeto#3|String|String|Integer


// ***** VDMTOOLS START Name=pre_editarObjeto#3|String|String|Integer KEEP=NO
  public Boolean pre_editarObjeto (final String novoNome, final String novoTipo, final Integer ord) throws CGException {

    Boolean varRes_4 = null;
    HashSet var2_6 = new HashSet();
    HashSet riseq_8 = new HashSet();
    int max_9 = objetos.size();
    for (int i_10 = 1; i_10 <= max_9; i_10++) 
      riseq_8.add(new Integer(i_10));
    var2_6 = riseq_8;
    varRes_4 = new Boolean(var2_6.contains(ord));
    return varRes_4;
  }
// ***** VDMTOOLS END Name=pre_editarObjeto#3|String|String|Integer


// ***** VDMTOOLS START Name=eliminarSegmento#1|Integer KEEP=NO
  public void eliminarSegmento (final Integer ord) throws CGException {

    if (!this.pre_eliminarSegmento(ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in eliminarSegmento");
    sentinel.entering(((DiagramaSentinel) sentinel).eliminarSegmento);
    try {
      if (new Boolean(ord.intValue() == new Integer(1).intValue()).booleanValue()) {

        Vector rhs_33 = null;
        int from_37 = (int) Math.max(new Integer(2).doubleValue() - 1, 0);
        int to_38 = (int) Math.min(new Integer(segmentos.size()).doubleValue(), segmentos.size());
        if (from_37 > to_38) 
          rhs_33 = new Vector();
        else 
          rhs_33 = new Vector(segmentos.subList(from_37, to_38));
        segmentos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_33));
      }
      else {

        Vector rhs_5 = null;
        Vector var1_6 = null;
        int from_10 = (int) Math.max(new Integer(1).doubleValue() - 1, 0);
        int to_11 = (int) Math.min(new Integer(ord.intValue() - new Integer(1).intValue()).doubleValue(), segmentos.size());
        if (from_10 > to_11) 
          var1_6 = new Vector();
        else 
          var1_6 = new Vector(segmentos.subList(from_10, to_11));
        Vector var2_19 = null;
        int from_23 = (int) Math.max(new Integer(ord.intValue() + new Integer(1).intValue()).doubleValue() - 1, 0);
        int to_24 = (int) Math.min(new Integer(segmentos.size()).doubleValue(), segmentos.size());
        if (from_23 > to_24) 
          var2_19 = new Vector();
        else 
          var2_19 = new Vector(segmentos.subList(from_23, to_24));
        rhs_5 = (Vector) var1_6.clone();
        rhs_5.addAll(var2_19);
        segmentos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_5));
      }
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).eliminarSegmento);
    }
  }
// ***** VDMTOOLS END Name=eliminarSegmento#1|Integer


// ***** VDMTOOLS START Name=pre_eliminarSegmento#1|Integer KEEP=NO
  public Boolean pre_eliminarSegmento (final Integer ord) throws CGException {

    Boolean varRes_2 = null;
    HashSet var2_4 = new HashSet();
    HashSet riseq_6 = new HashSet();
    int max_7 = segmentos.size();
    for (int i_8 = 1; i_8 <= max_7; i_8++) 
      riseq_6.add(new Integer(i_8));
    var2_4 = riseq_6;
    varRes_2 = new Boolean(var2_4.contains(ord));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_eliminarSegmento#1|Integer


// ***** VDMTOOLS START Name=eliminarObjeto#1|Integer KEEP=NO
  public void eliminarObjeto (final Integer ord) throws CGException {

    if (!this.pre_eliminarObjeto(ord).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in eliminarObjeto");
    sentinel.entering(((DiagramaSentinel) sentinel).eliminarObjeto);
    try {

      Vector segmentos2 = new Vector();
      {

        HashSet iset_2 = new HashSet();
        HashSet set_10 = new HashSet();
        Enumeration enm_11 = segmentos.elements();
        while ( enm_11.hasMoreElements())
          set_10.add(enm_11.nextElement());
        iset_2 = set_10;
        Segmento s = null;
        for (Iterator enm_22 = iset_2.iterator(); enm_22.hasNext(); ) {

          Segmento elem_3 = (Segmento) enm_22.next();
          s = (Segmento) elem_3;
          {

            Boolean cond_12 = null;
            Integer var1_13 = null;
            Objeto tmpRec_14 = null;
            if ((1 <= ord.intValue()) && (ord.intValue() <= objetos.size())) 
              tmpRec_14 = (Objeto) objetos.get(ord.intValue() - 1);
            else 
              UTIL.RunTime("Run-Time Error:Illegal index");
            var1_13 = tmpRec_14.id;
            HashSet var2_17 = new HashSet();
            var2_17 = s.ids;
            cond_12 = new Boolean(!var2_17.contains(var1_13));
            if (cond_12.booleanValue()) 
              segmentos2.add(s);
            segmentos = (Vector) UTIL.ConvertToList(UTIL.clone(segmentos2));
          }
        }
      }
      if (new Boolean(ord.intValue() == new Integer(1).intValue()).booleanValue()) {

        Vector rhs_54 = null;
        int from_58 = (int) Math.max(new Integer(2).doubleValue() - 1, 0);
        int to_59 = (int) Math.min(new Integer(objetos.size()).doubleValue(), objetos.size());
        if (from_58 > to_59) 
          rhs_54 = new Vector();
        else 
          rhs_54 = new Vector(objetos.subList(from_58, to_59));
        objetos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_54));
      }
      else {

        Vector rhs_26 = null;
        Vector var1_27 = null;
        int from_31 = (int) Math.max(new Integer(1).doubleValue() - 1, 0);
        int to_32 = (int) Math.min(new Integer(ord.intValue() - new Integer(1).intValue()).doubleValue(), objetos.size());
        if (from_31 > to_32) 
          var1_27 = new Vector();
        else 
          var1_27 = new Vector(objetos.subList(from_31, to_32));
        Vector var2_40 = null;
        int from_44 = (int) Math.max(new Integer(ord.intValue() + new Integer(1).intValue()).doubleValue() - 1, 0);
        int to_45 = (int) Math.min(new Integer(objetos.size()).doubleValue(), objetos.size());
        if (from_44 > to_45) 
          var2_40 = new Vector();
        else 
          var2_40 = new Vector(objetos.subList(from_44, to_45));
        rhs_26 = (Vector) var1_27.clone();
        rhs_26.addAll(var2_40);
        objetos = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_26));
      }
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).eliminarObjeto);
    }
  }
// ***** VDMTOOLS END Name=eliminarObjeto#1|Integer


// ***** VDMTOOLS START Name=pre_eliminarObjeto#1|Integer KEEP=NO
  public Boolean pre_eliminarObjeto (final Integer ord) throws CGException {

    Boolean varRes_2 = null;
    HashSet var2_4 = new HashSet();
    HashSet riseq_6 = new HashSet();
    int max_7 = objetos.size();
    for (int i_8 = 1; i_8 <= max_7; i_8++) 
      riseq_6.add(new Integer(i_8));
    var2_4 = riseq_6;
    varRes_2 = new Boolean(var2_4.contains(ord));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_eliminarObjeto#1|Integer


// ***** VDMTOOLS START Name=calcularSequencias KEEP=NO
  public Vector calcularSequencias () throws CGException {

    sentinel.entering(((DiagramaSentinel) sentinel).calcularSequencias);
    try {

      Vector seqsgmts = new Vector();
      Vector seqsgmt = new Vector();
      Integer l = new Integer(1);
      Integer alts = new Integer(1);
      Integer loops = new Integer(1);
      Integer c = new Integer(1);
      {

        HashSet iset_1 = new HashSet();
        HashSet set_9 = new HashSet();
        Enumeration enm_10 = segmentos.elements();
        while ( enm_10.hasMoreElements())
          set_9.add(enm_10.nextElement());
        iset_1 = set_9;
        Segmento s = null;
        for (Iterator enm_21 = iset_1.iterator(); enm_21.hasNext(); ) {

          Segmento elem_2 = (Segmento) enm_21.next();
          s = (Segmento) elem_2;
          if (new Boolean(s instanceof BlocoLoop).booleanValue()) 
            loops = UTIL.NumberToInt(UTIL.clone(new Integer(limite.intValue() * loops.intValue())));
          else {
            if (new Boolean(s instanceof BlocoAlt).booleanValue()) 
              alts = UTIL.NumberToInt(UTIL.clone(new Integer(new Integer(2).intValue() * alts.intValue())));
          }
        }
      }
      l = UTIL.NumberToInt(UTIL.clone(new Integer(loops.intValue() * alts.intValue())));
      for (int ilb_27 = 1; ilb_27 <= l.intValue(); ilb_27++) {

        Integer i = new Integer(ilb_27);
        {

          seqsgmt = (Vector) UTIL.ConvertToList(UTIL.clone(new Vector()));
          for (int ilb_32 = 1; ilb_32 <= new Integer(segmentos.size()).intValue(); ilb_32++) {

            Integer j = new Integer(ilb_32);
            {

              Boolean cond_33 = null;
              Segmento obj_34 = null;
              if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                obj_34 = (Segmento) segmentos.get(j.intValue() - 1);
              else 
                UTIL.RunTime("Run-Time Error:Illegal index");
              cond_33 = new Boolean(obj_34 instanceof Mensagem);
              if (cond_33.booleanValue()) {

                Segmento e_89 = null;
                if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                  e_89 = (Segmento) segmentos.get(j.intValue() - 1);
                else 
                  UTIL.RunTime("Run-Time Error:Illegal index");
                seqsgmt.add(e_89);
              }
              else {

                Boolean cond_62 = null;
                Segmento obj_63 = null;
                if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                  obj_63 = (Segmento) segmentos.get(j.intValue() - 1);
                else 
                  UTIL.RunTime("Run-Time Error:Illegal index");
                cond_62 = new Boolean(obj_63 instanceof BlocoLoop);
                if (cond_62.booleanValue()) {

                  if (new Boolean((c.intValue()) > (alts.intValue())).booleanValue()) 
                    c = UTIL.NumberToInt(UTIL.clone(new Integer(1)));
                  Vector rhs_70 = null;
                  Vector var2_72 = null;
                  Vector tmp_l_73 = null;
                  Object tmpGen_74 = null;
                  Segmento tmpRec_75 = null;
                  if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                    tmpRec_75 = (Segmento) segmentos.get(j.intValue() - 1);
                  else 
                    UTIL.RunTime("Run-Time Error:Illegal index");
                  {

                    Segmento obj_80 = null;
                    if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                      obj_80 = (Segmento) segmentos.get(j.intValue() - 1);
                    else 
                      UTIL.RunTime("Run-Time Error:Illegal index");
                    tmp_l_73 = (Vector) obj_80.getSequencias(limite);
                  }
                  if ((1 <= c.intValue()) && (c.intValue() <= tmp_l_73.size())) 
                    var2_72 = (Vector) UTIL.ConvertToList(tmp_l_73.get(c.intValue() - 1));
                  else 
                    UTIL.RunTime("Run-Time Error:Illegal index");
                  rhs_70 = (Vector) seqsgmt.clone();
                  rhs_70.addAll(var2_72);
                  seqsgmt = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_70));
                  c = UTIL.NumberToInt(UTIL.clone(new Integer(c.intValue() + new Integer(1).intValue())));
                }
                else {

                  Boolean cond_41 = null;
                  Segmento obj_42 = null;
                  if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                    obj_42 = (Segmento) segmentos.get(j.intValue() - 1);
                  else 
                    UTIL.RunTime("Run-Time Error:Illegal index");
                  cond_41 = new Boolean(obj_42 instanceof BlocoAlt);
                  if (cond_41.booleanValue()) {

                    Vector rhs_45 = null;
                    Vector var2_47 = null;
                    Vector tmp_l_48 = null;
                    Object tmpGen_49 = null;
                    Segmento tmpRec_50 = null;
                    if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                      tmpRec_50 = (Segmento) segmentos.get(j.intValue() - 1);
                    else 
                      UTIL.RunTime("Run-Time Error:Illegal index");
                    {

                      Segmento obj_54 = null;
                      if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                        obj_54 = (Segmento) segmentos.get(j.intValue() - 1);
                      else 
                        UTIL.RunTime("Run-Time Error:Illegal index");
                      tmp_l_48 = (Vector) obj_54.getSequencias();
                    }
                    if ((1 <= new Integer(new Integer((int) (i.doubleValue() - new Integer(2).doubleValue() * Math.floor(i.doubleValue() / new Integer(2).doubleValue()))).intValue() + new Integer(1).intValue()).intValue()) && (new Integer(new Integer((int) (i.doubleValue() - new Integer(2).doubleValue() * Math.floor(i.doubleValue() / new Integer(2).doubleValue()))).intValue() + new Integer(1).intValue()).intValue() <= tmp_l_48.size())) 
                      var2_47 = (Vector) UTIL.ConvertToList(tmp_l_48.get(new Integer(new Integer((int) (i.doubleValue() - new Integer(2).doubleValue() * Math.floor(i.doubleValue() / new Integer(2).doubleValue()))).intValue() + new Integer(1).intValue()).intValue() - 1));
                    else 
                      UTIL.RunTime("Run-Time Error:Illegal index");
                    rhs_45 = (Vector) seqsgmt.clone();
                    rhs_45.addAll(var2_47);
                    seqsgmt = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_45));
                  }
                  else {

                    Segmento e_38 = null;
                    if ((1 <= j.intValue()) && (j.intValue() <= segmentos.size())) 
                      e_38 = (Segmento) segmentos.get(j.intValue() - 1);
                    else 
                      UTIL.RunTime("Run-Time Error:Illegal index");
                    seqsgmt.add(e_38);
                  }
                }
              }
            }
          }
          seqsgmts.add(seqsgmt);
        }
      }
      return seqsgmts;
    }
    finally {
      sentinel.leaving(((DiagramaSentinel) sentinel).calcularSequencias);
    }
  }
// ***** VDMTOOLS END Name=calcularSequencias

}
;
