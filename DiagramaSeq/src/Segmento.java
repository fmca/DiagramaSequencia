//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-05 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Segmento implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=nome KEEP=NO
  public volatile String nome = null;
// ***** VDMTOOLS END Name=nome

// ***** VDMTOOLS START Name=id KEEP=NO
  public volatile Integer id = null;
// ***** VDMTOOLS END Name=id

// ***** VDMTOOLS START Name=ids KEEP=NO
  public volatile HashSet ids = new HashSet();
// ***** VDMTOOLS END Name=ids

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=SegmentoSentinel KEEP=NO
  class SegmentoSentinel extends Sentinel {

    public final int getIds = 0;

    public final int Segmento = 1;

    public final int getSequencias_u_u0_u = 2;

    public final int getSequencias_u_u1_uN = 3;

    public final int nr_functions = 4;


    public SegmentoSentinel () throws CGException {}


    public SegmentoSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=SegmentoSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new SegmentoSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Segmento KEEP=NO
  private void vdm_init_Segmento () throws CGException {
    try {

      setSentinel();
      ids = new HashSet();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Segmento


// ***** VDMTOOLS START Name=Segmento KEEP=NO
  public Segmento () throws CGException {
    vdm_init_Segmento();
  }
// ***** VDMTOOLS END Name=Segmento


// ***** VDMTOOLS START Name=Segmento#2|String|Integer KEEP=NO
  public Segmento (final String n, final Integer i) throws CGException {

    if (!this.pre_Segmento(n, i).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in Segmento");
    vdm_init_Segmento();
    {

      nome = UTIL.ConvertToString(UTIL.clone(n));
      id = UTIL.NumberToInt(UTIL.clone(i));
    }
  }
// ***** VDMTOOLS END Name=Segmento#2|String|Integer


// ***** VDMTOOLS START Name=pre_Segmento#2|String|Integer KEEP=NO
  public Boolean pre_Segmento (final String n, final Integer i) throws CGException {
    return new Boolean((i.intValue()) > (new Integer(0).intValue()));
  }
// ***** VDMTOOLS END Name=pre_Segmento#2|String|Integer


// ***** VDMTOOLS START Name=getSequencias KEEP=NO
  public Vector getSequencias () throws CGException {

    sentinel.entering(((SegmentoSentinel) sentinel).getSequencias_u_u0_u);
    try {

      Vector rexpr_1 = null;
      Vector e_seq_2 = null;
      e_seq_2 = new Vector();
      e_seq_2.add(this);
      rexpr_1 = new Vector();
      rexpr_1.add(e_seq_2);
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((SegmentoSentinel) sentinel).getSequencias_u_u0_u);
    }
  }
// ***** VDMTOOLS END Name=getSequencias


// ***** VDMTOOLS START Name=getSequencias#1|Integer KEEP=NO
  public Vector getSequencias (final Integer l) throws CGException {

    sentinel.entering(((SegmentoSentinel) sentinel).getSequencias_u_u1_uN);
    try {

      Vector rexpr_2 = null;
      Vector e_seq_3 = null;
      e_seq_3 = new Vector();
      e_seq_3.add(this);
      rexpr_2 = new Vector();
      rexpr_2.add(e_seq_3);
      return rexpr_2;
    }
    finally {
      sentinel.leaving(((SegmentoSentinel) sentinel).getSequencias_u_u1_uN);
    }
  }
// ***** VDMTOOLS END Name=getSequencias#1|Integer


// ***** VDMTOOLS START Name=getIds#1|Vector KEEP=NO
  public HashSet getIds (final Vector sgmts) throws CGException {

    sentinel.entering(((SegmentoSentinel) sentinel).getIds);
    try {

      HashSet nS = new HashSet();
      {

        HashSet iset_2 = new HashSet();
        HashSet set_10 = new HashSet();
        Enumeration enm_11 = sgmts.elements();
        while ( enm_11.hasMoreElements())
          set_10.add(enm_11.nextElement());
        iset_2 = set_10;
        Segmento s = null;
        for (Iterator enm_16 = iset_2.iterator(); enm_16.hasNext(); ) {

          Segmento elem_3 = (Segmento) enm_16.next();
          s = (Segmento) elem_3;
          {

            HashSet rhs_12 = new HashSet();
            HashSet var2_14 = new HashSet();
            var2_14 = s.ids;
            rhs_12 = (HashSet) nS.clone();
            rhs_12.addAll(var2_14);
            nS = (HashSet) UTIL.clone(rhs_12);
          }
        }
      }
      return nS;
    }
    finally {
      sentinel.leaving(((SegmentoSentinel) sentinel).getIds);
    }
  }
// ***** VDMTOOLS END Name=getIds#1|Vector

}
;
