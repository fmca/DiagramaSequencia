//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-05 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class DiagramaTeste implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=diag KEEP=NO
  public volatile Diagrama diag = null;
// ***** VDMTOOLS END Name=diag

// ***** VDMTOOLS START Name=id KEEP=NO
  public volatile Integer id = null;
// ***** VDMTOOLS END Name=id

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=DiagramaTesteSentinel KEEP=NO
  class DiagramaTesteSentinel extends Sentinel {

    public final int reset = 0;

    public final int geradorId = 1;

    public final int AssertTrue = 2;

    public final int TestEditarObjeto = 3;

    public final int TestInserirObjeto = 4;

    public final int TestEditarSegmento = 5;

    public final int TestEliminarObjeto = 6;

    public final int TestInserirSegmento = 7;

    public final int TestEliminarSegmento = 8;

    public final int TestInserirSegmentoOrdem = 9;

    public final int nr_functions = 10;


    public DiagramaTesteSentinel () throws CGException {}


    public DiagramaTesteSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=DiagramaTesteSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new DiagramaTesteSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_DiagramaTeste KEEP=NO
  private void vdm_init_DiagramaTeste () throws CGException {
    try {

      setSentinel();
      diag = (Diagrama) new Diagrama(new String("teste"), new Integer(10));
      id = new Integer(1);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_DiagramaTeste


// ***** VDMTOOLS START Name=DiagramaTeste KEEP=NO
  public DiagramaTeste () throws CGException {
    vdm_init_DiagramaTeste();
  }
// ***** VDMTOOLS END Name=DiagramaTeste


// ***** VDMTOOLS START Name=AssertTrue#1|Boolean KEEP=NO
  public void AssertTrue (final Boolean a) throws CGException {

    if (!this.pre_AssertTrue(a).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in AssertTrue");
    sentinel.entering(((DiagramaTesteSentinel) sentinel).AssertTrue);
    try {
      return;
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).AssertTrue);
    }
  }
// ***** VDMTOOLS END Name=AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=pre_AssertTrue#1|Boolean KEEP=NO
  public Boolean pre_AssertTrue (final Boolean a) throws CGException {
    return a;
  }
// ***** VDMTOOLS END Name=pre_AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=reset KEEP=NO
  public void reset () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).reset);
    try {
      diag = (Diagrama) UTIL.clone(new Diagrama(new String("teste"), new Integer(10)));
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).reset);
    }
  }
// ***** VDMTOOLS END Name=reset


// ***** VDMTOOLS START Name=geradorId KEEP=NO
  public Integer geradorId () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).geradorId);
    try {

      Integer i = id;
      id = UTIL.NumberToInt(UTIL.clone(new Integer(id.intValue() + new Integer(1).intValue())));
      return i;
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).geradorId);
    }
  }
// ***** VDMTOOLS END Name=geradorId


// ***** VDMTOOLS START Name=TestInserirSegmento KEEP=NO
  public void TestInserirSegmento () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestInserirSegmento);
    try {

      Segmento seg = new Segmento(new String("s"), geradorId());
      Segmento seg2 = null;
      Integer tamanho = null;
      Vector unArg_3 = null;
      unArg_3 = diag.segmentos;
      tamanho = new Integer(unArg_3.size());
      diag.inserirSegmento((Segmento) seg);
      Segmento rhs_7 = null;
      Integer par_8 = null;
      Vector unArg_9 = null;
      unArg_9 = diag.segmentos;
      par_8 = new Integer(unArg_9.size());
      rhs_7 = (Segmento) diag.getSegmento(par_8);
      seg2 = (Segmento) UTIL.clone(rhs_7);
      Boolean tmpArg_v_12 = null;
      String var1_13 = null;
      var1_13 = seg.nome;
      String var2_15 = null;
      var2_15 = seg2.nome;
      tmpArg_v_12 = new Boolean(UTIL.equals(var1_13, var2_15));
      AssertTrue(tmpArg_v_12);
      Boolean tmpArg_v_18 = null;
      Integer var1_19 = null;
      var1_19 = seg.id;
      Integer var2_21 = null;
      var2_21 = seg2.id;
      tmpArg_v_18 = new Boolean(var1_19.intValue() == var2_21.intValue());
      AssertTrue(tmpArg_v_18);
      Boolean tmpArg_v_24 = null;
      Integer var2_28 = null;
      Vector unArg_29 = null;
      unArg_29 = diag.segmentos;
      var2_28 = new Integer(unArg_29.size());
      tmpArg_v_24 = new Boolean(new Integer(tamanho.intValue() + new Integer(1).intValue()).intValue() == var2_28.intValue());
      AssertTrue(tmpArg_v_24);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestInserirSegmento);
    }
  }
// ***** VDMTOOLS END Name=TestInserirSegmento


// ***** VDMTOOLS START Name=TestInserirSegmentoOrdem#1|Integer KEEP=NO
  public void TestInserirSegmentoOrdem (final Integer ord) throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestInserirSegmentoOrdem);
    try {

      Segmento seg = new Segmento(new String("s"), geradorId());
      Segmento seg2 = null;
      Integer tamanho = null;
      Vector unArg_4 = null;
      unArg_4 = diag.segmentos;
      tamanho = new Integer(unArg_4.size());
      diag.inserirSegmento((Segmento) seg, ord);
      Segmento rhs_9 = null;
      rhs_9 = (Segmento) diag.getSegmento(ord);
      seg2 = (Segmento) UTIL.clone(rhs_9);
      Boolean tmpArg_v_12 = null;
      String var1_13 = null;
      var1_13 = seg.nome;
      String var2_15 = null;
      var2_15 = seg2.nome;
      tmpArg_v_12 = new Boolean(UTIL.equals(var1_13, var2_15));
      AssertTrue(tmpArg_v_12);
      Boolean tmpArg_v_18 = null;
      Integer var1_19 = null;
      var1_19 = seg.id;
      Integer var2_21 = null;
      var2_21 = seg2.id;
      tmpArg_v_18 = new Boolean(var1_19.intValue() == var2_21.intValue());
      AssertTrue(tmpArg_v_18);
      Boolean tmpArg_v_24 = null;
      Integer var2_28 = null;
      Vector unArg_29 = null;
      unArg_29 = diag.segmentos;
      var2_28 = new Integer(unArg_29.size());
      tmpArg_v_24 = new Boolean(new Integer(tamanho.intValue() + new Integer(1).intValue()).intValue() == var2_28.intValue());
      AssertTrue(tmpArg_v_24);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestInserirSegmentoOrdem);
    }
  }
// ***** VDMTOOLS END Name=TestInserirSegmentoOrdem#1|Integer


// ***** VDMTOOLS START Name=TestEditarSegmento KEEP=NO
  public void TestEditarSegmento () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestEditarSegmento);
    try {

      Segmento seg = new Segmento(new String("s"), geradorId());
      Segmento seg2 = null;
      Integer tamanho = null;
      Vector unArg_3 = null;
      unArg_3 = diag.segmentos;
      tamanho = new Integer(unArg_3.size());
      diag.inserirSegmento((Segmento) seg, new Integer(1));
      diag.editarSegmento(new Integer(1), new String("abc"));
      Segmento rhs_11 = null;
      rhs_11 = (Segmento) diag.getSegmento(new Integer(1));
      seg2 = (Segmento) UTIL.clone(rhs_11);
      Boolean tmpArg_v_14 = null;
      String var1_15 = null;
      var1_15 = seg2.nome;
      tmpArg_v_14 = new Boolean(UTIL.equals(var1_15, new String("abc")));
      AssertTrue(tmpArg_v_14);
      Boolean tmpArg_v_19 = null;
      Integer var1_20 = null;
      var1_20 = seg.id;
      Integer var2_22 = null;
      var2_22 = seg2.id;
      tmpArg_v_19 = new Boolean(var1_20.intValue() == var2_22.intValue());
      AssertTrue(tmpArg_v_19);
      Boolean tmpArg_v_25 = null;
      Integer var2_29 = null;
      Vector unArg_30 = null;
      unArg_30 = diag.segmentos;
      var2_29 = new Integer(unArg_30.size());
      tmpArg_v_25 = new Boolean(new Integer(tamanho.intValue() + new Integer(1).intValue()).intValue() == var2_29.intValue());
      AssertTrue(tmpArg_v_25);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestEditarSegmento);
    }
  }
// ***** VDMTOOLS END Name=TestEditarSegmento


// ***** VDMTOOLS START Name=TestInserirObjeto KEEP=NO
  public void TestInserirObjeto () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestInserirObjeto);
    try {

      Objeto obj = new Objeto(new String("nome1"), geradorId(), new String("Actor"));
      Objeto obj2 = null;
      Integer tamanho = null;
      Vector unArg_4 = null;
      unArg_4 = diag.objetos;
      tamanho = new Integer(unArg_4.size());
      diag.inserirObjeto((Objeto) obj);
      Objeto rhs_8 = null;
      Integer par_9 = null;
      Vector unArg_10 = null;
      unArg_10 = diag.objetos;
      par_9 = new Integer(unArg_10.size());
      rhs_8 = (Objeto) diag.getObjeto(par_9);
      obj2 = (Objeto) UTIL.clone(rhs_8);
      Boolean tmpArg_v_13 = null;
      String var1_14 = null;
      var1_14 = obj.nome;
      String var2_16 = null;
      var2_16 = obj2.nome;
      tmpArg_v_13 = new Boolean(UTIL.equals(var1_14, var2_16));
      AssertTrue(tmpArg_v_13);
      Boolean tmpArg_v_19 = null;
      Integer var1_20 = null;
      var1_20 = obj.id;
      Integer var2_22 = null;
      var2_22 = obj2.id;
      tmpArg_v_19 = new Boolean(var1_20.intValue() == var2_22.intValue());
      AssertTrue(tmpArg_v_19);
      Boolean tmpArg_v_25 = null;
      Integer var2_29 = null;
      Vector unArg_30 = null;
      unArg_30 = diag.objetos;
      var2_29 = new Integer(unArg_30.size());
      tmpArg_v_25 = new Boolean(new Integer(tamanho.intValue() + new Integer(1).intValue()).intValue() == var2_29.intValue());
      AssertTrue(tmpArg_v_25);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestInserirObjeto);
    }
  }
// ***** VDMTOOLS END Name=TestInserirObjeto


// ***** VDMTOOLS START Name=TestEditarObjeto KEEP=NO
  public void TestEditarObjeto () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestEditarObjeto);
    try {

      Objeto obj = new Objeto(new String("nome1"), geradorId(), new String("Actor"));
      Objeto obj2 = null;
      Integer tamanho = null;
      Vector unArg_4 = null;
      unArg_4 = diag.objetos;
      tamanho = new Integer(unArg_4.size());
      reset();
      diag.inserirObjeto((Objeto) obj, new Integer(1));
      diag.editarObjeto(new String("nome2"), new String("Object"), new Integer(1));
      Objeto rhs_14 = null;
      rhs_14 = (Objeto) diag.getObjeto(new Integer(1));
      obj2 = (Objeto) UTIL.clone(rhs_14);
      Boolean tmpArg_v_17 = null;
      String var1_18 = null;
      var1_18 = obj2.nome;
      tmpArg_v_17 = new Boolean(UTIL.equals(var1_18, new String("nome2")));
      AssertTrue(tmpArg_v_17);
      Boolean tmpArg_v_22 = null;
      Integer var1_23 = null;
      var1_23 = obj.id;
      Integer var2_25 = null;
      var2_25 = obj2.id;
      tmpArg_v_22 = new Boolean(var1_23.intValue() == var2_25.intValue());
      AssertTrue(tmpArg_v_22);
      Boolean tmpArg_v_28 = null;
      String var1_29 = null;
      var1_29 = obj2.tipo;
      tmpArg_v_28 = new Boolean(UTIL.equals(var1_29, new String("Object")));
      AssertTrue(tmpArg_v_28);
      Boolean tmpArg_v_33 = null;
      Integer var2_37 = null;
      Vector unArg_38 = null;
      unArg_38 = diag.objetos;
      var2_37 = new Integer(unArg_38.size());
      tmpArg_v_33 = new Boolean(new Integer(tamanho.intValue() + new Integer(1).intValue()).intValue() == var2_37.intValue());
      AssertTrue(tmpArg_v_33);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestEditarObjeto);
    }
  }
// ***** VDMTOOLS END Name=TestEditarObjeto


// ***** VDMTOOLS START Name=TestEliminarSegmento KEEP=NO
  public void TestEliminarSegmento () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestEliminarSegmento);
    try {

      Segmento seg = new Segmento(new String("nome1"), geradorId());
      Segmento seg1 = new Segmento(new String("nome2"), geradorId());
      Segmento seg11 = new Segmento(new String("nome3"), geradorId());
      Integer tamanho = null;
      reset();
      diag.inserirSegmento((Segmento) seg);
      diag.inserirSegmento((Segmento) seg1);
      diag.inserirSegmento((Segmento) seg11);
      Integer rhs_14 = null;
      Vector unArg_15 = null;
      unArg_15 = diag.segmentos;
      rhs_14 = new Integer(unArg_15.size());
      tamanho = UTIL.NumberToInt(UTIL.clone(rhs_14));
      diag.eliminarSegmento(new Integer(1));
      {

        HashSet iset_19 = new HashSet();
        Vector unArg_27 = null;
        unArg_27 = diag.segmentos;
        HashSet set_29 = new HashSet();
        Enumeration enm_30 = unArg_27.elements();
        while ( enm_30.hasMoreElements())
          set_29.add(enm_30.nextElement());
        iset_19 = set_29;
        Segmento s = null;
        for (Iterator enm_37 = iset_19.iterator(); enm_37.hasNext(); ) {

          Segmento elem_20 = (Segmento) enm_37.next();
          s = (Segmento) elem_20;
          {

            Boolean tmpArg_v_32 = null;
            Integer var1_33 = null;
            var1_33 = s.id;
            Integer var2_35 = null;
            var2_35 = seg.id;
            tmpArg_v_32 = new Boolean(!(var1_33.intValue() == var2_35.intValue()));
            AssertTrue(tmpArg_v_32);
          }
        }
      }
      Boolean tmpArg_v_39 = null;
      Integer var2_43 = null;
      Vector unArg_44 = null;
      unArg_44 = diag.segmentos;
      var2_43 = new Integer(unArg_44.size());
      tmpArg_v_39 = new Boolean(new Integer(tamanho.intValue() - new Integer(1).intValue()).intValue() == var2_43.intValue());
      AssertTrue(tmpArg_v_39);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestEliminarSegmento);
    }
  }
// ***** VDMTOOLS END Name=TestEliminarSegmento


// ***** VDMTOOLS START Name=TestEliminarObjeto KEEP=NO
  public void TestEliminarObjeto () throws CGException {

    sentinel.entering(((DiagramaTesteSentinel) sentinel).TestEliminarObjeto);
    try {

      Objeto obj = new Objeto(new String("nome1"), geradorId(), new String("Actor"));
      Objeto obj1 = new Objeto(new String("nome2"), geradorId(), new String("Object"));
      Objeto obj11 = new Objeto(new String("nome3"), geradorId(), new String("Actor"));
      Integer tamanho = null;
      reset();
      diag.inserirObjeto((Objeto) obj);
      diag.inserirObjeto((Objeto) obj1);
      diag.inserirObjeto((Objeto) obj11);
      Integer rhs_17 = null;
      Vector unArg_18 = null;
      unArg_18 = diag.objetos;
      rhs_17 = new Integer(unArg_18.size());
      tamanho = UTIL.NumberToInt(UTIL.clone(rhs_17));
      diag.eliminarObjeto(new Integer(2));
      {

        HashSet iset_22 = new HashSet();
        Vector unArg_30 = null;
        unArg_30 = diag.objetos;
        HashSet set_32 = new HashSet();
        Enumeration enm_33 = unArg_30.elements();
        while ( enm_33.hasMoreElements())
          set_32.add(enm_33.nextElement());
        iset_22 = set_32;
        Objeto s = null;
        for (Iterator enm_40 = iset_22.iterator(); enm_40.hasNext(); ) {

          Objeto elem_23 = (Objeto) enm_40.next();
          s = (Objeto) elem_23;
          {

            Boolean tmpArg_v_35 = null;
            Integer var1_36 = null;
            var1_36 = s.id;
            Integer var2_38 = null;
            var2_38 = obj1.id;
            tmpArg_v_35 = new Boolean(!(var1_36.intValue() == var2_38.intValue()));
            AssertTrue(tmpArg_v_35);
          }
        }
      }
      Boolean tmpArg_v_42 = null;
      Integer var2_46 = null;
      Vector unArg_47 = null;
      unArg_47 = diag.objetos;
      var2_46 = new Integer(unArg_47.size());
      tmpArg_v_42 = new Boolean(new Integer(tamanho.intValue() - new Integer(1).intValue()).intValue() == var2_46.intValue());
      AssertTrue(tmpArg_v_42);
    }
    finally {
      sentinel.leaving(((DiagramaTesteSentinel) sentinel).TestEliminarObjeto);
    }
  }
// ***** VDMTOOLS END Name=TestEliminarObjeto

}
;
