//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-05 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class BlocoLoop extends Segmento {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=loopSeq KEEP=NO
  public volatile Vector loopSeq = null;
// ***** VDMTOOLS END Name=loopSeq


// ***** VDMTOOLS START Name=BlocoLoopSentinel KEEP=NO
  class BlocoLoopSentinel extends SegmentoSentinel {

    public final int BlocoLoop = 4;

    public final int getSequencias = 5;

    public final int nr_functions = 6;


    public BlocoLoopSentinel () throws CGException {}


    public BlocoLoopSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=BlocoLoopSentinel
;

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new BlocoLoopSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_BlocoLoop KEEP=NO
  private void vdm_init_BlocoLoop () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_BlocoLoop


// ***** VDMTOOLS START Name=BlocoLoop KEEP=NO
  public BlocoLoop () throws CGException {
    vdm_init_BlocoLoop();
  }
// ***** VDMTOOLS END Name=BlocoLoop


// ***** VDMTOOLS START Name=BlocoLoop#3|String|Integer|Vector KEEP=NO
  public BlocoLoop (final String n, final Integer i, final Vector m) throws CGException {

    if (!this.pre_BlocoLoop(n, i, m).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in BlocoLoop");
    vdm_init_BlocoLoop();
    {

      nome = UTIL.ConvertToString(UTIL.clone(n));
      id = UTIL.NumberToInt(UTIL.clone(i));
      loopSeq = (Vector) UTIL.ConvertToList(UTIL.clone(m));
      ids = (HashSet) UTIL.clone(getIds(loopSeq));
    }
  }
// ***** VDMTOOLS END Name=BlocoLoop#3|String|Integer|Vector


// ***** VDMTOOLS START Name=pre_BlocoLoop#3|String|Integer|Vector KEEP=NO
  public Boolean pre_BlocoLoop (final String n, final Integer i, final Vector m) throws CGException {

    Boolean varRes_4 = null;
    {
      if ((varRes_4 = new Boolean((i.intValue()) > (new Integer(0).intValue()))).booleanValue()) 
        varRes_4 = new Boolean((new Integer(n.length()).intValue()) > (new Integer(0).intValue()));
    }
    return varRes_4;
  }
// ***** VDMTOOLS END Name=pre_BlocoLoop#3|String|Integer|Vector


// ***** VDMTOOLS START Name=getSequencias#1|Integer KEEP=NO
  public Vector getSequencias (final Integer l) throws CGException {

    if (!this.pre_getSequencias(l).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in getSequencias");
    sentinel.entering(((BlocoLoopSentinel) sentinel).getSequencias);
    try {

      Vector seqsgmts = new Vector();
      Vector seqsgmt = new Vector();
      for (int ilb_4 = 1; ilb_4 <= l.intValue(); ilb_4++) {

        Integer i = new Integer(ilb_4);
        {

          Vector rhs_5 = null;
          rhs_5 = (Vector) seqsgmt.clone();
          rhs_5.addAll(loopSeq);
          seqsgmt = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_5));
          seqsgmts.add(seqsgmt);
        }
      }
      return seqsgmts;
    }
    finally {
      sentinel.leaving(((BlocoLoopSentinel) sentinel).getSequencias);
    }
  }
// ***** VDMTOOLS END Name=getSequencias#1|Integer


// ***** VDMTOOLS START Name=pre_getSequencias#1|Integer KEEP=NO
  public Boolean pre_getSequencias (final Integer l) throws CGException {
    return new Boolean((l.intValue()) >= (new Integer(1).intValue()));
  }
// ***** VDMTOOLS END Name=pre_getSequencias#1|Integer

}
;
