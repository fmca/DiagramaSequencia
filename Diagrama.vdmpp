class Diagrama
	types
	
	public Objeto:: nome: seq of char
					tipo: seq of char
	inv mk_Objeto(nome, tipo) ==
		len(nome) > 1 and tipo in set {"Actor", "Unit", "Object", "Other"}

-- TODO Define values here
	instance variables

	public segmentos : seq of Segmento;
	public objetos : seq of Objeto;
	public titulo : seq of char;
	public limite : int;
	
	
	operations

	public inserirSegmento: Segmento ==> ()
	inserirSegmento(sgmt) ==
		segmentos := segmentos ^ [sgmt]
		
	pre len(segmentos) < limite;
	
	---------------------------------------------
	public inserirSegmento: Segmento * nat1 ==> ()
	inserirSegmento(sgmt, ord) == 
		
		if(ord=1) then segmentos:= [sgmt] ^ segmentos
		else segmentos := segmentos(1,..., ord-1) ^ [sgmt] ^ segmentos(ord, ..., len(segmentos))
		
	pre ord > 0 and ord <= len(segmentos);
	
	---------------------------------------------		
end Diagrama



class Segmento

instance variables
	public nome: seq of char;
	inv len(nome) > 0
end Segmento




class Mensagem is subclass of Segmento
instance variables
	public tipo : seq of char;
	inv tipo in set { "message", "action", "asynchronous", "link", "destroy", "call", "create", "other"}

end Mensagem




class BlocoAlt is subclass of Segmento

instance variables
	public thenSeq: seq of Mensagem;
	public elseSeq: seq of Mensagem;
	
end BlocoAlt




class BlocoLoop is subclass of Segmento

instance variables
	public loopSeq: seq of Mensagem;
	
end BlocoLoop