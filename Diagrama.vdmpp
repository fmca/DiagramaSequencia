class Diagrama

-- TODO Define values here
	instance variables

	public segmentos : seq of Segmento;
	public objetos : seq of Objeto;
	public titulo : seq of char;
	public limite : int;
	
	
	operations
	
	--Getters
	
	public getSegmento: nat1 ==> Segmento
	getSegmento(ord) ==
	( 
		dcl s: Segmento;
		s:=segmentos(ord);
		return s;
	)
	pre ord >0 and ord <= len(segmentos);


	public getObjeto: nat1 ==> Objeto
	getObjeto(ord) ==
	(
		dcl o: Objeto;
		o:=objetos(ord);
		return o;
	)
	pre ord >0 and ord <= len(objetos);


	---------------------------------------------
	public inserirSegmento: Segmento ==> ()
	inserirSegmento(sgmt) ==
		segmentos := segmentos ^ [sgmt]
		
		
	pre len(segmentos) < limite;
	
	
	
	---------------------------------------------
	public inserirSegmento: Segmento * nat1 ==> ()
	inserirSegmento(sgmt, ord) == 
		
		if(ord=1) then segmentos:= [sgmt] ^ segmentos
		else segmentos := segmentos(1,..., ord-1) ^ [sgmt] ^ segmentos(ord, ..., len(segmentos))
		
	pre ord > 0 and ord <= len(segmentos);
	
	---------------------------------------------
	
	public editarSegmento: nat1 * seq of char ==> ()
	editarSegmento(ord, novoNome) ==
		(
			segmentos(ord).nome := novoNome;
		)
		pre ord > 0 and ord <= len(segmentos) and novoNome <> ""
		post segmentos(ord).nome <> "";
	
	---------------------------------------------
	
	public inserirObjeto: Objeto ==> ()
	inserirObjeto(obj) == 
		
		objetos := objetos ^ [obj]
		
	pre len(objetos) < limite;
	
	---------------------------------------------
	
	public inserirObjeto: Objeto * nat1 ==> ()
	inserirObjeto(obj, ord) == 
		
		if(ord=1) then objetos:= [obj] ^ objetos
		else objetos := objetos(1,..., ord-1) ^ [obj] ^ objetos(ord, ..., len(objetos))
		
	pre ord > 0 and ord <= len(objetos);
	
	---------------------------------------------
	
	public editarObjeto: seq of char * seq of char * nat1 ==> ()
	editarObjeto(novoNome, novoTipo, ord) == 
		(
			objetos(ord).nome := novoNome;
			objetos(ord).tipo := novoTipo;
		)
		pre ord > 0 and ord <= len(objetos) and novoNome <> ""
		post  objetos(ord).nome <> "";
	
			
end Diagrama



class Segmento

instance variables
	public nome: seq of char;
	public id : nat1;
	inv len(nome) > 0
operations
	public Segmento : seq of char * nat1 ==> Segmento
	Segmento (n, i) ==
	(
		nome:= n;
		id:=i;
	);
end Segmento

class Objeto
instance variables 

public nome: seq of char;
public tipo: seq of char;
public id : int;

inv len(nome) > 1 and tipo in set {"Actor", "Unit", "Object", "Other"};

operations 
public Objeto : seq of char * nat1 * seq of char ==> Objeto
Objeto (n, i, t) ==
	(
		nome:= n;
		id:=i;
		tipo:=t;
	);


end Objeto


class Mensagem is subclass of Segmento
instance variables
	public tipo : seq of char;
	inv tipo in set { "message", "action", "asynchronous", "link", "destroy", "call", "create", "other"}

end Mensagem




class BlocoAlt is subclass of Segmento

instance variables
	public thenSeq: seq of Mensagem;
	public elseSeq: seq of Mensagem;
	
end BlocoAlt


class BlocoLoop is subclass of Segmento

instance variables
	public loopSeq: seq of Mensagem;
	
end BlocoLoop